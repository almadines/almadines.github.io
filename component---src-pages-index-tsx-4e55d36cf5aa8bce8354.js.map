{"version":3,"sources":["webpack:///./src/components/Counter.tsx","webpack:///./src/pages/index.tsx"],"names":["Counter","render","this","props","count","onClick","increment","React","Component","ConnectedCounter","connect","state","dispatch","type","value","Home"],"mappings":"uIASA,IAQMA,E,gLACJC,OAAA,WACE,OAAO,6BACL,uCAAaC,KAAKC,MAAMC,OACxB,4BAAQC,QAASH,KAAKC,MAAMG,WAA5B,gB,GAJgBC,IAAMC,WASfC,EAAmBC,mBAjBR,SAACC,GACvB,MAAO,CAAEP,MAAOO,EAAMP,UAGG,SAAAQ,GACzB,MAAO,CAAEN,UAAW,kBAAMM,EAAS,CAAEC,KAAM,YAAaC,MAAO,WAYjCJ,CAG9BV,G,IC1BIe,E,gLACJd,OAAA,WACE,OACE,6BACE,6CACA,kBAACQ,EAAD,Q,GALWF,IAAMC,WAYVO","file":"component---src-pages-index-tsx-4e55d36cf5aa8bce8354.js","sourcesContent":["import React from 'react'\r\nimport { AppState } from '../state/createStore';\r\nimport { connect } from \"react-redux\"\r\n\r\ninterface CounterProps {\r\n  count: number\r\n  increment: () => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return { count: state.count }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return { increment: () => dispatch({ type: `INCREMENT`, value: 'hi' }) }\r\n}\r\n\r\nclass Counter extends React.Component<CounterProps> {\r\n  render(): JSX.Element {\r\n    return <div>\r\n      <div>value: {this.props.count}</div>\r\n      <button onClick={this.props.increment}>Increment!</button>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport const ConnectedCounter = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Counter)\r\n","import React from \"react\"\r\nimport { ConnectedCounter } from \"../components/Counter\";\r\n\r\nclass Home extends React.Component {\r\n  render(): JSX.Element {\r\n    return (\r\n      <div>\r\n        <h1>Hello Gatsby!</h1>\r\n        <ConnectedCounter/>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Home"],"sourceRoot":""}